{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/davidroberts/projects/GraphQL/ApolloTutorial/fullstack-tutorial/final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/davidroberts/projects/GraphQL/ApolloTutorial/fullstack-tutorial/final/client/src/pages/cart.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query GetCartItems {\\n    cartItems @client\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Fragment } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Header, Loading } from '../components';\nimport { CartItem, BookTrips } from '../containers';\nexport const GET_CART_ITEMS = gql(_templateObject());\n\nconst Cart = () => {\n  const _useQuery = useQuery(GET_CART_ITEMS),\n        data = _useQuery.data,\n        loading = _useQuery.loading,\n        error = _useQuery.error;\n\n  if (loading) return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 23\n    }\n  });\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, \"ERROR: \", error.message);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"My Cart\"), (data === null || data === void 0 ? void 0 : data.cartItems.length) === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"empty-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"No items in your cart\") : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, data === null || data === void 0 ? void 0 : data.cartItems.map(launchId => /*#__PURE__*/React.createElement(CartItem, {\n    key: launchId,\n    launchId: launchId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(BookTrips, {\n    cartItems: (data === null || data === void 0 ? void 0 : data.cartItems) || [],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default Cart;","map":{"version":3,"sources":["/Users/davidroberts/projects/GraphQL/ApolloTutorial/fullstack-tutorial/final/client/src/pages/cart.tsx"],"names":["React","Fragment","gql","useQuery","Header","Loading","CartItem","BookTrips","GET_CART_ITEMS","Cart","data","loading","error","message","cartItems","length","map","launchId"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AAEA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,eAAhC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,eAApC;AAIA,OAAO,MAAMC,cAAc,GAAGN,GAAH,mBAApB;;AAQP,MAAMO,IAAyB,GAAG,MAAM;AAAA,oBACLN,QAAQ,CACvCK,cADuC,CADH;AAAA,QAC9BE,IAD8B,aAC9BA,IAD8B;AAAA,QACxBC,OADwB,aACxBA,OADwB;AAAA,QACfC,KADe,aACfA,KADe;;AAKtC,MAAID,OAAJ,EAAa,oBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWA,KAAK,CAACC,OAAjB,CAAP;AAEX,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEG,CAAAH,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEI,SAAN,CAAgBC,MAAhB,MAA2B,CAA3B,gBACC;AAAG,mBAAY,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADD,gBAGC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IADH,aACGA,IADH,uBACGA,IAAI,CAAEI,SAAN,CAAgBE,GAAhB,CAAqBC,QAAD,iBACnB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,QAAf;AAAyB,IAAA,QAAQ,EAAEA,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,eAIE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAE,CAAAP,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEI,SAAN,KAAmB,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CALJ,CADF;AAeD,CAvBD;;AAyBA,eAAeL,IAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport { gql, useQuery } from '@apollo/client';\n\nimport { Header, Loading } from '../components';\nimport { CartItem, BookTrips } from '../containers';\nimport { RouteComponentProps } from '@reach/router';\nimport { GetCartItems } from './__generated__/GetCartItems';\n\nexport const GET_CART_ITEMS = gql`\n  query GetCartItems {\n    cartItems @client\n  }\n`;\n\ninterface CartProps extends RouteComponentProps {}\n\nconst Cart: React.FC<CartProps> = () => {\n  const { data, loading, error } = useQuery<GetCartItems>(\n    GET_CART_ITEMS\n  );\n\n  if (loading) return <Loading />;\n  if (error) return <p>ERROR: {error.message}</p>;\n\n  return (\n    <Fragment>\n      <Header>My Cart</Header>\n      {data?.cartItems.length === 0 ? (\n        <p data-testid=\"empty-message\">No items in your cart</p>\n      ) : (\n        <Fragment>\n          {data?.cartItems.map((launchId: any) => (\n            <CartItem key={launchId} launchId={launchId} />\n          ))}\n          <BookTrips cartItems={data?.cartItems || []} />\n        </Fragment>\n      )}\n    </Fragment>\n  );\n}\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}