{"ast":null,"code":"import _slicedToArray from \"/Users/davidroberts/projects/GraphQL/ApolloTutorial/fullstack-tutorial/final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/davidroberts/projects/GraphQL/ApolloTutorial/fullstack-tutorial/final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/davidroberts/projects/GraphQL/ApolloTutorial/fullstack-tutorial/final/client/src/containers/action-button.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation cancel($launchId: ID!) {\\n    cancelTrip(launchId: $launchId) {\\n      success\\n      message\\n      launches {\\n        id\\n        isBooked\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { gql, useMutation, useReactiveVar } from '@apollo/client';\nimport { GET_LAUNCH_DETAILS } from '../pages/launch';\nimport Button from '../components/button';\nimport { cartItemsVar } from '../cache';\nexport { GET_LAUNCH_DETAILS };\nexport const CANCEL_TRIP = gql(_templateObject());\n\nconst CancelTripButton = ({\n  id\n}) => {\n  const _useMutation = useMutation(CANCEL_TRIP, {\n    variables: {\n      launchId: id\n    },\n\n    update(cache, {\n      data: {\n        cancelTrip\n      }\n    }) {\n      // Update the user's cached list of trips to remove the trip that\n      // was just canceled.\n      const launch = cancelTrip.launches[0];\n      cache.modify({\n        id: cache.identify({\n          __typename: 'User',\n          id: localStorage.getItem('userId')\n        }),\n        fields: {\n          trips(existingTrips, {\n            readField\n          }) {\n            return existingTrips.filter(tripRef => readField(\"id\", tripRef) !== launch.id);\n          }\n\n        }\n      });\n    }\n\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        mutate = _useMutation2[0],\n        _useMutation2$ = _useMutation2[1],\n        loading = _useMutation2$.loading,\n        error = _useMutation2$.error;\n\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"An error occurred\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => mutate(),\n    \"data-testid\": 'action-button',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Cancel This Trip\"));\n};\n\nconst ToggleTripButton = ({\n  id\n}) => {\n  const cartItems = useReactiveVar(cartItemsVar);\n  const isInCart = id ? cartItems.includes(id) : false;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      if (id) {\n        cartItemsVar(isInCart ? cartItems.filter(itemId => itemId !== id) : [...cartItems, id]);\n      }\n    },\n    \"data-testid\": 'action-button',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, isInCart ? 'Remove from Cart' : 'Add to Cart'));\n};\n\nconst ActionButton = ({\n  isBooked,\n  id\n}) => isBooked ? /*#__PURE__*/React.createElement(CancelTripButton, {\n  id: id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 16\n  }\n}) : /*#__PURE__*/React.createElement(ToggleTripButton, {\n  id: id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 47\n  }\n});\n\nexport default ActionButton;","map":{"version":3,"sources":["/Users/davidroberts/projects/GraphQL/ApolloTutorial/fullstack-tutorial/final/client/src/containers/action-button.tsx"],"names":["React","gql","useMutation","useReactiveVar","GET_LAUNCH_DETAILS","Button","cartItemsVar","CANCEL_TRIP","CancelTripButton","id","variables","launchId","update","cache","data","cancelTrip","launch","launches","modify","identify","__typename","localStorage","getItem","fields","trips","existingTrips","readField","filter","tripRef","mutate","loading","error","ToggleTripButton","cartItems","isInCart","includes","itemId","ActionButton","isBooked"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  gql,\n  useMutation,\n  useReactiveVar,\n  Reference,\n} from '@apollo/client';\n\nimport { GET_LAUNCH_DETAILS } from '../pages/launch';\nimport Button from '../components/button';\nimport { cartItemsVar } from '../cache';\nimport * as LaunchDetailTypes from '../pages/__generated__/LaunchDetails';\n\nexport { GET_LAUNCH_DETAILS };\n\nexport const CANCEL_TRIP = gql`\n  mutation cancel($launchId: ID!) {\n    cancelTrip(launchId: $launchId) {\n      success\n      message\n      launches {\n        id\n        isBooked\n      }\n    }\n  }\n`;\n\ninterface ActionButtonProps extends Partial<LaunchDetailTypes.LaunchDetails_launch> {}\n\nconst CancelTripButton: React.FC<ActionButtonProps> = ({ id }) => {\n  const [mutate, { loading, error }] = useMutation(\n    CANCEL_TRIP,\n    {\n      variables: { launchId: id },\n      update(cache, { data: { cancelTrip } }) {\n        // Update the user's cached list of trips to remove the trip that\n        // was just canceled.\n        const launch = cancelTrip.launches[0];\n        cache.modify({\n          id: cache.identify({\n            __typename: 'User',\n            id: localStorage.getItem('userId'),\n          }),\n          fields: {\n            trips(existingTrips: Reference[], { readField }) {\n              return existingTrips.filter(\n                tripRef => readField(\"id\", tripRef) !== launch.id\n              );\n            }\n          }\n        });\n      }\n    }\n  );\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>An error occurred</p>;\n\n  return (\n    <div>\n      <Button\n        onClick={() => mutate()}\n        data-testid={'action-button'}\n      >\n        Cancel This Trip\n      </Button>\n    </div>\n  );\n};\n\nconst ToggleTripButton: React.FC<ActionButtonProps> = ({ id }) => {\n  const cartItems = useReactiveVar(cartItemsVar);\n  const isInCart = id ? cartItems.includes(id) : false;\n  return (\n    <div>\n      <Button\n        onClick={() => {\n          if (id) {\n            cartItemsVar(\n              isInCart\n                ? cartItems.filter(itemId => itemId !== id)\n                : [...cartItems, id]\n            );\n          }\n        }}\n        data-testid={'action-button'}\n      >\n        {isInCart ? 'Remove from Cart' : 'Add to Cart'}\n      </Button>\n    </div>\n  );\n}\n\nconst ActionButton: React.FC<ActionButtonProps> =\n  ({ isBooked, id }) => (\n    isBooked ? <CancelTripButton id={id} /> : <ToggleTripButton id={id} />\n  );\n\nexport default ActionButton;\n"]},"metadata":{},"sourceType":"module"}