{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/davidroberts/projects/GraphQL/ApolloTutorial/fullstack-tutorial/final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/davidroberts/projects/GraphQL/ApolloTutorial/fullstack-tutorial/final/client/src/containers/cart-item.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query GetLaunch($launchId: ID!) {\\n    launch(id: $launchId) {\\n      ...LaunchTile\\n    }\\n  }\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport LaunchTile from '../components/launch-tile';\nimport { LAUNCH_TILE_DATA } from '../pages/launches';\nexport const GET_LAUNCH = gql(_templateObject(), LAUNCH_TILE_DATA);\n\nconst CartItem = ({\n  launchId\n}) => {\n  const _useQuery = useQuery(GET_LAUNCH, {\n    variables: {\n      launchId\n    }\n  }),\n        data = _useQuery.data,\n        loading = _useQuery.loading,\n        error = _useQuery.error;\n\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, \"ERROR: \", error.message);\n  if (!data) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  return data.launch && /*#__PURE__*/React.createElement(LaunchTile, {\n    launch: data.launch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  });\n};\n\nexport default CartItem;","map":{"version":3,"sources":["/Users/davidroberts/projects/GraphQL/ApolloTutorial/fullstack-tutorial/final/client/src/containers/cart-item.tsx"],"names":["React","gql","useQuery","LaunchTile","LAUNCH_TILE_DATA","GET_LAUNCH","CartItem","launchId","variables","data","loading","error","message","launch"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AAEA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AAGA,OAAO,MAAMC,UAAU,GAAGJ,GAAH,oBAMnBG,gBANmB,CAAhB;;AAWP,MAAME,QAAiC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA,oBACzBL,QAAQ,CACvCG,UADuC,EAEvC;AAAEG,IAAAA,SAAS,EAAE;AAAED,MAAAA;AAAF;AAAb,GAFuC,CADiB;AAAA,QAClDE,IADkD,aAClDA,IADkD;AAAA,QAC5CC,OAD4C,aAC5CA,OAD4C;AAAA,QACnCC,KADmC,aACnCA,KADmC;;AAK1D,MAAID,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWA,KAAK,CAACC,OAAjB,CAAP;AACX,MAAI,CAACH,IAAL,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACX,SAAOA,IAAI,CAACI,MAAL,iBAAe,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEJ,IAAI,CAACI,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB;AACD,CATD;;AAWA,eAAeP,QAAf","sourcesContent":["import React from 'react';\nimport { gql, useQuery } from '@apollo/client';\n\nimport LaunchTile from '../components/launch-tile';\nimport { LAUNCH_TILE_DATA } from '../pages/launches';\nimport * as LaunchDetailTypes from '../pages/__generated__/LaunchDetails';\n\nexport const GET_LAUNCH = gql`\n  query GetLaunch($launchId: ID!) {\n    launch(id: $launchId) {\n      ...LaunchTile\n    }\n  }\n  ${LAUNCH_TILE_DATA}\n`;\n\ninterface CartItemProps extends LaunchDetailTypes.LaunchDetailsVariables {}\n\nconst CartItem: React.FC<CartItemProps> = ({ launchId }) => {\n  const { data, loading, error } = useQuery<LaunchDetailTypes.LaunchDetails, LaunchDetailTypes.LaunchDetailsVariables>(\n    GET_LAUNCH,\n    { variables: { launchId } }\n  );\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR: {error.message}</p>;\n  if (!data) return <p>Not found</p>;\n  return data.launch && <LaunchTile launch={data.launch} />;\n}\n\nexport default CartItem;\n"]},"metadata":{},"sourceType":"module"}